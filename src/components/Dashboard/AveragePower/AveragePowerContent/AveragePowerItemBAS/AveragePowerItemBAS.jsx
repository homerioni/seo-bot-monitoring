import React, {useContext, useEffect, useState} from 'react';
import s from './AveragePowerItemBAS.module.scss';
import {PMService} from "../../../../../API/PMService";
import {getStatsForAveragePower} from "../../../dashboardTools";
import {defaultCatch} from "../../../../../utils/tools";
import {AlertContext} from "../../../../../App";

const AveragePowerItemBAS = ({data, dates, qtyDaysStat, setMaxValue, maxValue, color}) => {
    const addAlert = useContext(AlertContext);
    const [stats, setStats] = useState(null);
    const percent = stats?.average / maxValue * 100;

    useEffect(() => {
        if (data.result.servers?.length) {
            setStats(null);
            const timer = setTimeout(() => {
                const statsObj = {
                    average: 0,
                    min: null,
                    max: null,
                    qty: data.result.servers?.length,
                    sum: 0
                };

                const reqData = {
                    endAt: dates?.endDate ?? new Date(Date.now()).toISOString().slice(0, 10),
                    startAt: dates?.startDate ?? new Date(Date.now() - 86400000 * qtyDaysStat).toISOString().slice(0, 10),
                    mode: ['AVERAGE', 'MIN', 'MAX'],
                    serverIds: data.result.servers?.map(e => e.id),
                }

                PMService.performanceCycle.statistics(reqData).then(resp => {
                    if (resp.result[0]) {
                        resp.result.forEach(item => {
                            if (!item.result[0]) return;
                            switch (item.mode) {
                                case 'AVERAGE':
                                    item.result.forEach(server => {
                                        statsObj.sum += server.number;
                                    });
                                    statsObj.average = statsObj.sum / item.result.length;
                                    break;
                                case 'MIN':
                                    item.result.forEach(server => {
                                        if (statsObj.min === null) statsObj.min = {};
                                        if (server.number < statsObj.min.value || statsObj.min.value === undefined) {
                                            statsObj.min.value = server.number;
                                            statsObj.min.serverName = server.server.name;
                                        }
                                    });
                                    break;
                                case 'MAX':
                                    item.result.forEach(server => {
                                        if (statsObj.max === null) statsObj.max = {};
                                        if (server.number > statsObj.max.value || statsObj.max.value === undefined) {
                                            statsObj.max.value = server.number;
                                            statsObj.max.serverName = server.server.name;
                                        }
                                    });
                                    break;
                            }
                        });

                        setStats(statsObj);
                        if (statsObj.average > maxValue) setMaxValue(statsObj.average);
                    }
                }).catch(e => defaultCatch(e, addAlert));
            }, 1000);

            return () => {
                clearTimeout(timer);
            }
        }
    }, [qtyDaysStat, dates, data]);

    return (
        <div className={s.main} style={{'--color': color, display: !stats ? 'none' : ''}}>
            <div className={s.nameBox}>
                <span>{data.name}</span>
                <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M0.4688 0.455778C-4.76837e-08 0.911556 0 1.64422 0 3.11111C0 4.578 -4.76837e-08 5.31067 0.4688 5.76644C0.9376 6.22222 1.6912 6.22222 3.2 6.22222H12.8C14.3088 6.22222 15.0624 6.22222 15.5312 5.76644C16 5.31067 16 4.578 16 3.11111C16 1.64422 16 0.911556 15.5312 0.455778C15.0624 -4.63592e-08 14.3088 0 12.8 0H3.2C1.6912 0 0.9376 -4.63592e-08 0.4688 0.455778ZM5.6 4.47222C5.44087 4.47222 5.28826 4.41076 5.17574 4.30137C5.06321 4.19197 5 4.0436 5 3.88889V2.33333C5 2.17862 5.06321 2.03025 5.17574 1.92085C5.28826 1.81146 5.44087 1.75 5.6 1.75C5.75913 1.75 5.91174 1.81146 6.02426 1.92085C6.13679 2.03025 6.2 2.17862 6.2 2.33333V3.88889C6.2 4.0436 6.13679 4.19197 6.02426 4.30137C5.91174 4.41076 5.75913 4.47222 5.6 4.47222ZM9.2 2.52778C9.04087 2.52778 8.88826 2.58924 8.77574 2.69863C8.66321 2.80803 8.6 2.9564 8.6 3.11111C8.6 3.26582 8.66321 3.41419 8.77574 3.52359C8.88826 3.63299 9.04087 3.69444 9.2 3.69444H12.8C12.9591 3.69444 13.1117 3.63299 13.2243 3.52359C13.3368 3.41419 13.4 3.26582 13.4 3.11111C13.4 2.9564 13.3368 2.80803 13.2243 2.69863C13.1117 2.58924 12.9591 2.52778 12.8 2.52778H9.2ZM3.2 4.47222C3.04087 4.47222 2.88826 4.41076 2.77574 4.30137C2.66321 4.19197 2.6 4.0436 2.6 3.88889V2.33333C2.6 2.17862 2.66321 2.03025 2.77574 1.92085C2.88826 1.81146 3.04087 1.75 3.2 1.75C3.35913 1.75 3.51174 1.81146 3.62426 1.92085C3.73679 2.03025 3.8 2.17862 3.8 2.33333V3.88889C3.8 4.0436 3.73679 4.19197 3.62426 4.30137C3.51174 4.41076 3.35913 4.47222 3.2 4.47222ZM0.4688 8.23356C-4.76837e-08 8.68933 0 9.422 0 10.8889C0 12.3558 -4.76837e-08 13.0884 0.4688 13.5442C0.9376 14 1.6912 14 3.2 14H12.8C14.3088 14 15.0624 14 15.5312 13.5442C16 13.0884 16 12.3558 16 10.8889C16 9.422 16 8.68933 15.5312 8.23356C15.0624 7.77778 14.3088 7.77778 12.8 7.77778H3.2C1.6912 7.77778 0.9376 7.77778 0.4688 8.23356ZM8.6 10.8889C8.6 10.7342 8.66321 10.5858 8.77574 10.4764C8.88826 10.367 9.04087 10.3056 9.2 10.3056H12.8C12.9591 10.3056 13.1117 10.367 13.2243 10.4764C13.3368 10.5858 13.4 10.7342 13.4 10.8889C13.4 11.0436 13.3368 11.192 13.2243 11.3014C13.1117 11.4108 12.9591 11.4722 12.8 11.4722H9.2C9.04087 11.4722 8.88826 11.4108 8.77574 11.3014C8.66321 11.192 8.6 11.0436 8.6 10.8889ZM2.6 11.6667C2.6 11.8214 2.66321 11.9698 2.77574 12.0791C2.88826 12.1885 3.04087 12.25 3.2 12.25C3.35913 12.25 3.51174 12.1885 3.62426 12.0791C3.73679 11.9698 3.8 11.8214 3.8 11.6667V10.1111C3.8 9.9564 3.73679 9.80803 3.62426 9.69863C3.51174 9.58924 3.35913 9.52778 3.2 9.52778C3.04087 9.52778 2.88826 9.58924 2.77574 9.69863C2.66321 9.80803 2.6 9.9564 2.6 10.1111V11.6667ZM5.6 12.25C5.44087 12.25 5.28826 12.1885 5.17574 12.0791C5.06321 11.9698 5 11.8214 5 11.6667V10.1111C5 9.9564 5.06321 9.80803 5.17574 9.69863C5.28826 9.58924 5.44087 9.52778 5.6 9.52778C5.75913 9.52778 5.91174 9.58924 6.02426 9.69863C6.13679 9.80803 6.2 9.9564 6.2 10.1111V11.6667C6.2 11.8214 6.13679 11.9698 6.02426 12.0791C5.91174 12.1885 5.75913 12.25 5.6 12.25Z" fill="#A1B1C5"/>
                </svg>
                <span>{stats?.qty}</span>
            </div>
            <div className={s.valBox}>
                <div className={s.val} style={{'--percent': percent > 100 ? 100 : percent}}/>
                <div className={s.valInfo}>
                    <div className={s.dayInfo}>
                        <span>{stats?.average} </span>
                        <span>/ сутки</span>
                    </div>
                    <div className={s.valMinMax}>
                        <span>{stats?.min?.value}</span>
                        <span>min</span>
                        <div className={s.hoverBox}>
                            <div className={s.hoverBoxName}>
                                <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd" d="M0.4102 0.390667C-4.17233e-08 0.781333 0 1.40933 0 2.66667C0 3.924 -4.17233e-08 4.552 0.4102 4.94267C0.8204 5.33333 1.4798 5.33333 2.8 5.33333H11.2C12.5202 5.33333 13.1796 5.33333 13.5898 4.94267C14 4.552 14 3.924 14 2.66667C14 1.40933 14 0.781333 13.5898 0.390667C13.1796 -3.97364e-08 12.5202 0 11.2 0H2.8C1.4798 0 0.8204 -3.97364e-08 0.4102 0.390667ZM4.9 3.83333C4.76076 3.83333 4.62723 3.78065 4.52877 3.68689C4.43031 3.59312 4.375 3.46594 4.375 3.33333V2C4.375 1.86739 4.43031 1.74021 4.52877 1.64645C4.62723 1.55268 4.76076 1.5 4.9 1.5C5.03924 1.5 5.17277 1.55268 5.27123 1.64645C5.36969 1.74021 5.425 1.86739 5.425 2V3.33333C5.425 3.46594 5.36969 3.59312 5.27123 3.68689C5.17277 3.78065 5.03924 3.83333 4.9 3.83333ZM8.05 2.16667C7.91076 2.16667 7.77723 2.21935 7.67877 2.31311C7.58031 2.40688 7.525 2.53406 7.525 2.66667C7.525 2.79927 7.58031 2.92645 7.67877 3.02022C7.77723 3.11399 7.91076 3.16667 8.05 3.16667H11.2C11.3392 3.16667 11.4728 3.11399 11.5712 3.02022C11.6697 2.92645 11.725 2.79927 11.725 2.66667C11.725 2.53406 11.6697 2.40688 11.5712 2.31311C11.4728 2.21935 11.3392 2.16667 11.2 2.16667H8.05ZM2.8 3.83333C2.66076 3.83333 2.52723 3.78065 2.42877 3.68689C2.33031 3.59312 2.275 3.46594 2.275 3.33333V2C2.275 1.86739 2.33031 1.74021 2.42877 1.64645C2.52723 1.55268 2.66076 1.5 2.8 1.5C2.93924 1.5 3.07277 1.55268 3.17123 1.64645C3.26969 1.74021 3.325 1.86739 3.325 2V3.33333C3.325 3.46594 3.26969 3.59312 3.17123 3.68689C3.07277 3.78065 2.93924 3.83333 2.8 3.83333ZM0.4102 7.05733C-4.17233e-08 7.448 0 8.076 0 9.33333C0 10.5907 -4.17233e-08 11.2187 0.4102 11.6093C0.8204 12 1.4798 12 2.8 12H11.2C12.5202 12 13.1796 12 13.5898 11.6093C14 11.2187 14 10.5907 14 9.33333C14 8.076 14 7.448 13.5898 7.05733C13.1796 6.66667 12.5202 6.66667 11.2 6.66667H2.8C1.4798 6.66667 0.8204 6.66667 0.4102 7.05733ZM7.525 9.33333C7.525 9.20073 7.58031 9.07355 7.67877 8.97978C7.77723 8.88601 7.91076 8.83333 8.05 8.83333H11.2C11.3392 8.83333 11.4728 8.88601 11.5712 8.97978C11.6697 9.07355 11.725 9.20073 11.725 9.33333C11.725 9.46594 11.6697 9.59312 11.5712 9.68689C11.4728 9.78066 11.3392 9.83333 11.2 9.83333H8.05C7.91076 9.83333 7.77723 9.78066 7.67877 9.68689C7.58031 9.59312 7.525 9.46594 7.525 9.33333ZM2.275 10C2.275 10.1326 2.33031 10.2598 2.42877 10.3536C2.52723 10.4473 2.66076 10.5 2.8 10.5C2.93924 10.5 3.07277 10.4473 3.17123 10.3536C3.26969 10.2598 3.325 10.1326 3.325 10V8.66667C3.325 8.53406 3.26969 8.40688 3.17123 8.31311C3.07277 8.21935 2.93924 8.16667 2.8 8.16667C2.66076 8.16667 2.52723 8.21935 2.42877 8.31311C2.33031 8.40688 2.275 8.53406 2.275 8.66667V10ZM4.9 10.5C4.76076 10.5 4.62723 10.4473 4.52877 10.3536C4.43031 10.2598 4.375 10.1326 4.375 10V8.66667C4.375 8.53406 4.43031 8.40688 4.52877 8.31311C4.62723 8.21935 4.76076 8.16667 4.9 8.16667C5.03924 8.16667 5.17277 8.21935 5.27123 8.31311C5.36969 8.40688 5.425 8.53406 5.425 8.66667V10C5.425 10.1326 5.36969 10.2598 5.27123 10.3536C5.17277 10.4473 5.03924 10.5 4.9 10.5Z" fill="#A1B1C5"/>
                                </svg>
                                <span>{stats?.min?.serverName}</span>
                            </div>
                        </div>
                    </div>
                    <div className={s.valMinMax}>
                        <span>{stats?.max?.value}</span>
                        <span>max</span>
                        <div className={s.hoverBox}>
                            <div className={s.hoverBoxName}>
                                <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd" d="M0.4102 0.390667C-4.17233e-08 0.781333 0 1.40933 0 2.66667C0 3.924 -4.17233e-08 4.552 0.4102 4.94267C0.8204 5.33333 1.4798 5.33333 2.8 5.33333H11.2C12.5202 5.33333 13.1796 5.33333 13.5898 4.94267C14 4.552 14 3.924 14 2.66667C14 1.40933 14 0.781333 13.5898 0.390667C13.1796 -3.97364e-08 12.5202 0 11.2 0H2.8C1.4798 0 0.8204 -3.97364e-08 0.4102 0.390667ZM4.9 3.83333C4.76076 3.83333 4.62723 3.78065 4.52877 3.68689C4.43031 3.59312 4.375 3.46594 4.375 3.33333V2C4.375 1.86739 4.43031 1.74021 4.52877 1.64645C4.62723 1.55268 4.76076 1.5 4.9 1.5C5.03924 1.5 5.17277 1.55268 5.27123 1.64645C5.36969 1.74021 5.425 1.86739 5.425 2V3.33333C5.425 3.46594 5.36969 3.59312 5.27123 3.68689C5.17277 3.78065 5.03924 3.83333 4.9 3.83333ZM8.05 2.16667C7.91076 2.16667 7.77723 2.21935 7.67877 2.31311C7.58031 2.40688 7.525 2.53406 7.525 2.66667C7.525 2.79927 7.58031 2.92645 7.67877 3.02022C7.77723 3.11399 7.91076 3.16667 8.05 3.16667H11.2C11.3392 3.16667 11.4728 3.11399 11.5712 3.02022C11.6697 2.92645 11.725 2.79927 11.725 2.66667C11.725 2.53406 11.6697 2.40688 11.5712 2.31311C11.4728 2.21935 11.3392 2.16667 11.2 2.16667H8.05ZM2.8 3.83333C2.66076 3.83333 2.52723 3.78065 2.42877 3.68689C2.33031 3.59312 2.275 3.46594 2.275 3.33333V2C2.275 1.86739 2.33031 1.74021 2.42877 1.64645C2.52723 1.55268 2.66076 1.5 2.8 1.5C2.93924 1.5 3.07277 1.55268 3.17123 1.64645C3.26969 1.74021 3.325 1.86739 3.325 2V3.33333C3.325 3.46594 3.26969 3.59312 3.17123 3.68689C3.07277 3.78065 2.93924 3.83333 2.8 3.83333ZM0.4102 7.05733C-4.17233e-08 7.448 0 8.076 0 9.33333C0 10.5907 -4.17233e-08 11.2187 0.4102 11.6093C0.8204 12 1.4798 12 2.8 12H11.2C12.5202 12 13.1796 12 13.5898 11.6093C14 11.2187 14 10.5907 14 9.33333C14 8.076 14 7.448 13.5898 7.05733C13.1796 6.66667 12.5202 6.66667 11.2 6.66667H2.8C1.4798 6.66667 0.8204 6.66667 0.4102 7.05733ZM7.525 9.33333C7.525 9.20073 7.58031 9.07355 7.67877 8.97978C7.77723 8.88601 7.91076 8.83333 8.05 8.83333H11.2C11.3392 8.83333 11.4728 8.88601 11.5712 8.97978C11.6697 9.07355 11.725 9.20073 11.725 9.33333C11.725 9.46594 11.6697 9.59312 11.5712 9.68689C11.4728 9.78066 11.3392 9.83333 11.2 9.83333H8.05C7.91076 9.83333 7.77723 9.78066 7.67877 9.68689C7.58031 9.59312 7.525 9.46594 7.525 9.33333ZM2.275 10C2.275 10.1326 2.33031 10.2598 2.42877 10.3536C2.52723 10.4473 2.66076 10.5 2.8 10.5C2.93924 10.5 3.07277 10.4473 3.17123 10.3536C3.26969 10.2598 3.325 10.1326 3.325 10V8.66667C3.325 8.53406 3.26969 8.40688 3.17123 8.31311C3.07277 8.21935 2.93924 8.16667 2.8 8.16667C2.66076 8.16667 2.52723 8.21935 2.42877 8.31311C2.33031 8.40688 2.275 8.53406 2.275 8.66667V10ZM4.9 10.5C4.76076 10.5 4.62723 10.4473 4.52877 10.3536C4.43031 10.2598 4.375 10.1326 4.375 10V8.66667C4.375 8.53406 4.43031 8.40688 4.52877 8.31311C4.62723 8.21935 4.76076 8.16667 4.9 8.16667C5.03924 8.16667 5.17277 8.21935 5.27123 8.31311C5.36969 8.40688 5.425 8.53406 5.425 8.66667V10C5.425 10.1326 5.36969 10.2598 5.27123 10.3536C5.17277 10.4473 5.03924 10.5 4.9 10.5Z" fill="#A1B1C5"/>
                                </svg>
                                <span>{stats?.max?.serverName}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default AveragePowerItemBAS;