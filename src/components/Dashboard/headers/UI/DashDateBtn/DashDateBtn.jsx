import React, {useState} from 'react';
import s from './DashDateBtn.module.scss';
import './DashDateBtn.scss';
import DashSelect from "../DashSelect/DashSelect";
import {DatePicker} from "antd";
import locale from 'antd/es/date-picker/locale/ru_RU';

const {RangePicker} = DatePicker;

const DashDateBtn = ({setQtyDaysStat, setDates, dates, titleMob, subtitleMob}) => {
    const [isOpen, setIsOpen] = useState(false);
    const [formatDate, setFormatDate] = useState([]);

    const onChange = e => {
        const startDate = new Date(e[0].$d);
        const endDate = new Date(e[1].$d);
        const qtyDays = (endDate - startDate) / (24*60*60*1000) + 1;
        setDates({
            startDate: startDate.toISOString().slice(0,10),
            endDate: endDate.toISOString().slice(0, 10),
            qtyDays
        });
        setFormatDate([
            startDate.toLocaleString().slice(0,6) + startDate.toLocaleString().slice(8,10),
            endDate.toLocaleString().slice(0,6) + endDate.toLocaleString().slice(8,10),
        ]);
        setIsOpen(false);
    };

    return (
        <div className={s.main}>
            <div className={`${s.datesContainer} ${isOpen ? s.active : ''}`}>
                <div className={s.containerHeader}>
                    <div className={s.containerTitleBox}>
                        <p>{titleMob}</p>
                        <p>{subtitleMob}</p>
                    </div>
                    <button className={s.containerClose} onClick={() => setIsOpen(false)}/>
                </div>
            </div>
            <RangePicker className={`dashDatePicker`} popupClassName={`dashDatePopup ${isOpen ? 'active' : ''}`} open={isOpen} onChange={onChange} locale={locale}/>
            <DashSelect style={{display: !dates ? '' : 'none'}} list={[{name: '5 дней', value: 5}, {
                name: '10 дней',
                value: 10
            }, {name: '20 дней', value: 20}, {name: '30 дней', value: 30}]} titleMob={'Промежуток'} subtitleMob={'(Исключая сегодня)'} setValue={setQtyDaysStat} defaultValue={5}/>
            <div className={`${s.datesBox} ${!!dates ? s.active : ''}`}>
                <div className={s.dates}>{formatDate[0]}-{formatDate[1]}</div>
                <button className={s.reset} onClick={() => setDates(null)}/>
                <button type='button' className={s.btn} onClick={() => setIsOpen(prev => !prev)}>
                    <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.5627 2.67V1.5C12.5627 1.1925 12.3077 0.9375 12.0002 0.9375C11.6927 0.9375 11.4377 1.1925 11.4377 1.5V2.625H6.56267V1.5C6.56267 1.1925 6.30767 0.9375 6.00017 0.9375C5.69267 0.9375 5.43767 1.1925 5.43767 1.5V2.67C3.41267 2.8575 2.43017 4.065 2.28017 5.8575C2.26517 6.075 2.44517 6.255 2.65517 6.255H15.3452C15.5627 6.255 15.7427 6.0675 15.7202 5.8575C15.5702 4.065 14.5877 2.8575 12.5627 2.67Z" fill="#8B98EE"/>
                        <path d="M15 7.37988H3C2.5875 7.37988 2.25 7.71738 2.25 8.12988V12.7499C2.25 14.9999 3.375 16.4999 6 16.4999H12C14.625 16.4999 15.75 14.9999 15.75 12.7499V8.12988C15.75 7.71738 15.4125 7.37988 15 7.37988ZM6.9075 13.6574C6.87 13.6874 6.8325 13.7249 6.795 13.7474C6.75 13.7774 6.705 13.7999 6.66 13.8149C6.615 13.8374 6.57 13.8524 6.525 13.8599C6.4725 13.8674 6.4275 13.8749 6.375 13.8749C6.2775 13.8749 6.18 13.8524 6.09 13.8149C5.9925 13.7774 5.9175 13.7249 5.8425 13.6574C5.7075 13.5149 5.625 13.3199 5.625 13.1249C5.625 12.9299 5.7075 12.7349 5.8425 12.5924C5.9175 12.5249 5.9925 12.4724 6.09 12.4349C6.225 12.3749 6.375 12.3599 6.525 12.3899C6.57 12.3974 6.615 12.4124 6.66 12.4349C6.705 12.4499 6.75 12.4724 6.795 12.5024C6.8325 12.5324 6.87 12.5624 6.9075 12.5924C7.0425 12.7349 7.125 12.9299 7.125 13.1249C7.125 13.3199 7.0425 13.5149 6.9075 13.6574ZM6.9075 11.0324C6.765 11.1674 6.57 11.2499 6.375 11.2499C6.18 11.2499 5.985 11.1674 5.8425 11.0324C5.7075 10.8899 5.625 10.6949 5.625 10.4999C5.625 10.3049 5.7075 10.1099 5.8425 9.96738C6.0525 9.75738 6.3825 9.68988 6.66 9.80988C6.7575 9.84738 6.84 9.89988 6.9075 9.96738C7.0425 10.1099 7.125 10.3049 7.125 10.4999C7.125 10.6949 7.0425 10.8899 6.9075 11.0324ZM9.5325 13.6574C9.39 13.7924 9.195 13.8749 9 13.8749C8.805 13.8749 8.61 13.7924 8.4675 13.6574C8.3325 13.5149 8.25 13.3199 8.25 13.1249C8.25 12.9299 8.3325 12.7349 8.4675 12.5924C8.745 12.3149 9.255 12.3149 9.5325 12.5924C9.6675 12.7349 9.75 12.9299 9.75 13.1249C9.75 13.3199 9.6675 13.5149 9.5325 13.6574ZM9.5325 11.0324C9.495 11.0624 9.4575 11.0924 9.42 11.1224C9.375 11.1524 9.33 11.1749 9.285 11.1899C9.24 11.2124 9.195 11.2274 9.15 11.2349C9.0975 11.2424 9.0525 11.2499 9 11.2499C8.805 11.2499 8.61 11.1674 8.4675 11.0324C8.3325 10.8899 8.25 10.6949 8.25 10.4999C8.25 10.3049 8.3325 10.1099 8.4675 9.96738C8.535 9.89988 8.6175 9.84738 8.715 9.80988C8.9925 9.68988 9.3225 9.75738 9.5325 9.96738C9.6675 10.1099 9.75 10.3049 9.75 10.4999C9.75 10.6949 9.6675 10.8899 9.5325 11.0324ZM12.1575 13.6574C12.015 13.7924 11.82 13.8749 11.625 13.8749C11.43 13.8749 11.235 13.7924 11.0925 13.6574C10.9575 13.5149 10.875 13.3199 10.875 13.1249C10.875 12.9299 10.9575 12.7349 11.0925 12.5924C11.37 12.3149 11.88 12.3149 12.1575 12.5924C12.2925 12.7349 12.375 12.9299 12.375 13.1249C12.375 13.3199 12.2925 13.5149 12.1575 13.6574ZM12.1575 11.0324C12.12 11.0624 12.0825 11.0924 12.045 11.1224C12 11.1524 11.955 11.1749 11.91 11.1899C11.865 11.2124 11.82 11.2274 11.775 11.2349C11.7225 11.2424 11.67 11.2499 11.625 11.2499C11.43 11.2499 11.235 11.1674 11.0925 11.0324C10.9575 10.8899 10.875 10.6949 10.875 10.4999C10.875 10.3049 10.9575 10.1099 11.0925 9.96738C11.1675 9.89988 11.2425 9.84738 11.34 9.80988C11.475 9.74988 11.625 9.73488 11.775 9.76488C11.82 9.77238 11.865 9.78738 11.91 9.80988C11.955 9.82488 12 9.84738 12.045 9.87738C12.0825 9.90738 12.12 9.93738 12.1575 9.96738C12.2925 10.1099 12.375 10.3049 12.375 10.4999C12.375 10.6949 12.2925 10.8899 12.1575 11.0324Z" fill="#8B98EE"/>
                    </svg>
                </button>
            </div>
        </div>
    );
};

export default DashDateBtn;