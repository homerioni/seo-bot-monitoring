import React, {useMemo} from 'react';
import s from './ProfileSumItemGraph.module.scss';
import {convertToThousands, convertToThousandsCeil} from "../../../../../utils/tools";

const ProfileSumItemGraph = ({statsEachDayData}) => {
    const maxValue = useMemo(() => {
        let max = 0;
        statsEachDayData?.forEach(item => {
            max = item.numberOfSuccess > max ? item.numberOfSuccess : max;
        })
        return max;
    }, [statsEachDayData]);

    return (
        <div className={s.main}>
            <div className={s.table}>
                <div className={s.bg}>
                    {Array.from({length: 5}, (e, i) => {
                        if (i === 0) return <span key={i}><span>{convertToThousandsCeil(maxValue)}</span></span>
                        return <span key={i}><span>{convertToThousands(maxValue / 4 * (4 - i))}</span></span>;
                    })}
                </div>
                <div className={s.content}>
                    {statsEachDayData?.map((item, i) => (
                        <div key={i} className={s.item} style={{height: item.numberOfSuccess / maxValue * 100 + '%'}}>
                            <div className={s.data}>
                                <p>{item.numberOfSuccess}</p>
                                {/*<p>*/}
                                {/*    <svg width="10" height="8" viewBox="0 0 10 8" fill="none" xmlns="http://www.w3.org/2000/svg">*/}
                                {/*        <path fillRule="evenodd" clipRule="evenodd" d="M0.5137 0.327498C0.25 0.555387 0.25 0.921721 0.25 1.65516C0.25 2.38861 0.25 2.75494 0.5137 2.98283C0.7774 3.21072 1.2013 3.21072 2.05 3.21072H7.45C8.2987 3.21072 8.7226 3.21072 8.9863 2.98283C9.25 2.75494 9.25 2.38861 9.25 1.65516C9.25 0.921721 9.25 0.555387 8.9863 0.327498C8.7226 0.0996094 8.2987 0.0996094 7.45 0.0996094H2.05C1.2013 0.0996094 0.7774 0.0996094 0.5137 0.327498ZM3.4 2.33572C3.31049 2.33572 3.22465 2.30499 3.16135 2.25029C3.09806 2.1956 3.0625 2.12141 3.0625 2.04405V1.26628C3.0625 1.18892 3.09806 1.11473 3.16135 1.06004C3.22465 1.00534 3.31049 0.974609 3.4 0.974609C3.48951 0.974609 3.57535 1.00534 3.63865 1.06004C3.70194 1.11473 3.7375 1.18892 3.7375 1.26628V2.04405C3.7375 2.12141 3.70194 2.1956 3.63865 2.25029C3.57535 2.30499 3.48951 2.33572 3.4 2.33572ZM5.425 1.3635C5.33549 1.3635 5.24965 1.39423 5.18635 1.44893C5.12306 1.50362 5.0875 1.57781 5.0875 1.65516C5.0875 1.73252 5.12306 1.80671 5.18635 1.8614C5.24965 1.9161 5.33549 1.94683 5.425 1.94683H7.45C7.53951 1.94683 7.62536 1.9161 7.68865 1.8614C7.75194 1.80671 7.7875 1.73252 7.7875 1.65516C7.7875 1.57781 7.75194 1.50362 7.68865 1.44893C7.62536 1.39423 7.53951 1.3635 7.45 1.3635H5.425ZM2.05 2.33572C1.96049 2.33572 1.87464 2.30499 1.81135 2.25029C1.74806 2.1956 1.7125 2.12141 1.7125 2.04405V1.26628C1.7125 1.18892 1.74806 1.11473 1.81135 1.06004C1.87464 1.00534 1.96049 0.974609 2.05 0.974609C2.13951 0.974609 2.22536 1.00534 2.28865 1.06004C2.35194 1.11473 2.3875 1.18892 2.3875 1.26628V2.04405C2.3875 2.12141 2.35194 2.1956 2.28865 2.25029C2.22536 2.30499 2.13951 2.33572 2.05 2.33572ZM0.5137 4.21639C0.25 4.44428 0.25 4.81061 0.25 5.54405C0.25 6.2775 0.25 6.64383 0.5137 6.87172C0.7774 7.09961 1.2013 7.09961 2.05 7.09961H7.45C8.2987 7.09961 8.7226 7.09961 8.9863 6.87172C9.25 6.64383 9.25 6.2775 9.25 5.54405C9.25 4.81061 9.25 4.44428 8.9863 4.21639C8.7226 3.9885 8.2987 3.9885 7.45 3.9885H2.05C1.2013 3.9885 0.7774 3.9885 0.5137 4.21639ZM5.0875 5.54405C5.0875 5.4667 5.12306 5.39251 5.18635 5.33781C5.24965 5.28312 5.33549 5.25239 5.425 5.25239H7.45C7.53951 5.25239 7.62536 5.28312 7.68865 5.33781C7.75194 5.39251 7.7875 5.4667 7.7875 5.54405C7.7875 5.62141 7.75194 5.6956 7.68865 5.75029C7.62536 5.80499 7.53951 5.83572 7.45 5.83572H5.425C5.33549 5.83572 5.24965 5.80499 5.18635 5.75029C5.12306 5.6956 5.0875 5.62141 5.0875 5.54405ZM1.7125 5.93294C1.7125 6.0103 1.74806 6.08448 1.81135 6.13918C1.87464 6.19388 1.96049 6.22461 2.05 6.22461C2.13951 6.22461 2.22536 6.19388 2.28865 6.13918C2.35194 6.08448 2.3875 6.0103 2.3875 5.93294V5.15517C2.3875 5.07781 2.35194 5.00362 2.28865 4.94893C2.22536 4.89423 2.13951 4.8635 2.05 4.8635C1.96049 4.8635 1.87464 4.89423 1.81135 4.94893C1.74806 5.00362 1.7125 5.07781 1.7125 5.15517V5.93294ZM3.4 6.22461C3.31049 6.22461 3.22465 6.19388 3.16135 6.13918C3.09806 6.08448 3.0625 6.0103 3.0625 5.93294V5.15517C3.0625 5.07781 3.09806 5.00362 3.16135 4.94893C3.22465 4.89423 3.31049 4.8635 3.4 4.8635C3.48951 4.8635 3.57535 4.89423 3.63865 4.94893C3.70194 5.00362 3.7375 5.07781 3.7375 5.15517V5.93294C3.7375 6.0103 3.70194 6.08448 3.63865 6.13918C3.57535 6.19388 3.48951 6.22461 3.4 6.22461Z" fill="#A1B1C5"/>*/}
                                {/*    </svg>*/}
                                {/*    <span>?</span>*/}
                                {/*</p>*/}
                            </div>
                            <div className={s.date}>{item.endDate.slice(8)}.{item.endDate.slice(5,7)}</div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
};

export default ProfileSumItemGraph;